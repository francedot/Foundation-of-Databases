DROP TABLE DENTISTI;
DROP TABLE PREVENTIVI;
DROP TABLE SEDUTE;


CREATE TABLE DENTISTI (

	DID CHAR(2) NOT NULL,
	NOME VARCHAR(20) NOT NULL,
	ANNISERVIZIO INT NOT NULL,
	
	CONSTRAINT DENTISTI_P_KEY PRIMARY KEY (DID)
	
);

CREATE TABLE PREVENTIVI (

	PID CHAR(2) NOT NULL,
	DATA DATE NOT NULL,
	PAZIENTE VARCHAR(20) NOT NULL,
	DESCR VARCHAR(20) NOT NULL,
	IMPORTO FLOAT NOT NULL,
	PAGATO FLOAT NOT NULL,
	
	CONSTRAINT PREVENTIVI_P_KEY PRIMARY KEY (PID)

);

CREATE TABLE SEDUTE (

	PID CHAR(2) NOT NULL,
	DATA DATE NOT NULL,
	DID CHAR(2) NOT NULL,
	
	FOREIGN KEY (PID) REFERENCES PREVENTIVI
		ON DELETE CASCADE,
	FOREIGN KEY (DID) REFERENCES DENTISTI
		ON DELETE CASCADE,
		
	CONSTRAINT SEDUTE_P_KEY PRIMARY KEY (PID, DATA)

);

INSERT INTO DENTISTI(DID, Nome, AnniServizio)
values ('d1', 'Molari', 21),
	   ('d2', 'Nervo', 14),
	   ('d3', 'Cariati', 8);
		
INSERT INTO PREVENTIVI(PID, Data, Paziente, Descr, Importo, Pagato)
values ('p1', '10/01/2012', 'Pippo', 'pulizia canalare', 1200.0, 0.0),
	   ('p2', '12/02/2014', 'Pippo', 'estrazioni', 450.0, 150.0),
	   ('p3', '12/02/2014', 'Pluto', 'estrazioni', 450.0, 150.0),
	   ('p4', '15/01/2012', 'Mimmi', 'pulizia canalare', 1200.0, 1200.0);
		
INSERT INTO SEDUTE(PID, DATA, DID)
values ('p1', '13/02/2013', 'd2'),
       ('p1', '23/05/2013', 'd2'),
	   ('p1', '13/12/2013', 'd2'),
	   ('p1', '15/02/2013', 'd1'),
	   ('p4', '14/02/2013', 'd1'),
	   ('p4', '15/02/2013', 'd1'),
	   ('p4', '19/02/2013', 'd1'),
	   ('p2', '15/02/2014', 'd2');

DELETE FROM DENTISTI;
DELETE FROM PREVENTIVI;
DELETE FROM SEDUTE;
--2.1) [2 p.] I nomi dei dentisti con almeno 5 anni di servizio che hanno eseguito cure di tipo 'pulizia
--canalare' con 3 o più sedute nel 2013, tutte relative a uno stesso preventivo

SELECT *
FROM DENTISTI;

SELECT *
FROM DENTISTI D, PREVENTIVI P, SEDUTE S
WHERE D.DID = S.DID
AND P.PID = S.PID;

--DID PER DIFFERENZIARE DENTISTI CON STESSO NOME
SELECT D.DID, D.NOME
FROM DENTISTI D, PREVENTIVI P, SEDUTE S
WHERE D.DID = S.DID
AND P.PID = S.PID
AND D.ANNISERVIZIO >= 5
AND UPPER(P.DESCR) LIKE '%PULIZIA CANALARE%'
AND YEAR(S.DATA) = 2013
GROUP BY D.DID, D.NOME, P.PID
HAVING COUNT(*) >= 3;

--2.2) [3 p.] Per ogni preventivo completamente pagato e in cui tutte le sedute (almeno 2) sono state
--con uno stesso dentista, il numero di giorni trascorsi tra la prima e l'ultima seduta


--PREVENTIVI COMPLETAMENTE PAGATI IN CUI TUTTE LE SEDUTE SONO STATE CON UNO STESSO DENTISTA
WITH SEDUTE_PID_DID(PID, DIS) AS(
	SELECT S.PID, S.DID
	FROM SEDUTE S
	GROUP BY S.PID, S.DID
),

PID_SAME_DENTISTA(PID) AS(
	SELECT SPD.PID
	FROM SEDUTE_PID_DID SPD
	GROUP BY SPD.PID
	HAVING COUNT(*) = 1
)

SELECT *
FROM PREVENTIVI P
WHERE P.PID IN( SELECT *
			    FROM PID_SAME_DENTISTA )
AND P.IMPORTO = P.PAGATO;

--COMPLETA
--Per ogni preventivo completamente pagato e in cui tutte le sedute (almeno 2) sono state
--con uno stesso dentista, il numero di giorni trascorsi tra la prima e l'ultima seduta

WITH SEDUTE_PID_DID(PID, DIS) AS(
	SELECT S.PID, S.DID
	FROM SEDUTE S
	GROUP BY S.PID, S.DID
),

PID_SAME_DENTISTA(PID) AS(
	SELECT SPD.PID
	FROM SEDUTE_PID_DID SPD
	GROUP BY SPD.PID
	HAVING COUNT(*) = 1
),

SEDUTE_WITH_PREVENTIVI_PAGATI_SAME_DENTISTA(PID,DATA,DID) AS(
	SELECT S.PID, S.DATA, S.DID
	FROM PREVENTIVI P JOIN SEDUTE S ON (P.PID = S.PID)
	WHERE P.PID IN( SELECT *
					FROM PID_SAME_DENTISTA )
	AND P.IMPORTO = P.PAGATO
)

SELECT S.PID, (DAYS(MAX(S.DATA)) - DAYS(MIN(S.DATA))) AS NUM_GIORNI_TRASCORSI
FROM SEDUTE_WITH_PREVENTIVI_PAGATI_SAME_DENTISTA S
GROUP BY S.PID;

-- DAYS NON è UNA FUNZIONE AGGREGATA MA FUNZIONE DI TUPLA COME YEAR ECC.
-- SI POSSONO APPLICARE PIU F AGGREGATE ALLA STESSA SELECT MA NON DENTRO ALTRE F AGGREGATE















SELECT * FROM SEDUTE;
SELECT * FROM DENTISTI D;
SELECT * FROM SEDUTE;












SELECT S1.PID
FROM SEDUTE S1
WHERE NOT EXISTS(
				 SELECT *
				 FROM DENTISTI D
				 WHERE NOT EXISTS(
								  SELECT *
								  FROM SEDUTE S2
								  WHERE D.DID = S2.DID
								  AND S1.PID = S2.PID
								  )
				);











