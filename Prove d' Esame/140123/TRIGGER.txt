DROP TRIGGER UNIQUE_B;
DROP TRIGGER C_NOT_GREATER_THAN_A;

SELECT NAME
FROM SYSIBM.SYSTRIGGERS
WHERE SCHEMA = '09050944'
ORDER BY NAME;

--TRIGGER PER GARANTIRE L'UNIVOCITA' DI B --> DI FATTO SOTITUISCE LA DEFINIZIONE DI B
--COME UNIQUE DATO CHE NON SI PUO SCRIVERLO COME CHIAVE IN DDL

CREATE TRIGGER UNIQUE_B
NO CASCADE BEFORE INSERT ON E2
REFERENCING NEW AS NEWE2
FOR EACH ROW
WHEN(EXISTS(SELECT * FROM E2 WHERE NEWE2.B = E2.B))
SIGNAL SQLSTATE '70000' ('VALORE DI B GIA'' PRESENTE IN E2');

CREATE TRIGGER C_NOT_GREATER_THAN_A
NO CASCADE BEFORE INSERT ON E2
REFERENCING NEW AS NEWE2
FOR EACH ROW
WHEN (NEWE2.C > (SELECT E1.A FROM E1 WHERE E1.K1 = NEWE2.K1R2))
SIGNAL SQLSTATE '70001' ('VALORE DI C > A!');

-- Poiche' min-card(E1,R1) = 1, ogni volta che si inserisce una tupla in E1 bisogna anche eseguire, nella stessa
-- transazione, almeno un inserimento in R1

-- SELECT *
-- FROM SYSCAT.TRIGGERS
-- WHERE TABNAME = 'E1'
-- AND DEFINER = "09050944";

-- CREATE TRIGGER R1_K2_NOT_NULL
-- NO CASCADE BEFORE INSERT ON R1
-- REFERENCING NEW AS NEWR1
-- FOR EACH ROW
-- WHEN (NEWR1.K2 IS NULL)
-- SIGNAL SQLSTATE '70000' ('VALORE DI CHIAVE NULLO!');

INSERIMENTO BLOCCATO!
-- INSERT INTO R1(F, K1, K2)
-- VALUES        (1, 2, NULL);


-- INSERT INTO R1(F, K1, K2)
-- VALUES        (1, 2, 34),
			  -- (1, 2, 6),
			  -- (1, 2, NULL);

-- CREATE TRIGGER R1_K2_NOT_NULL
-- NO CASCADE BEFORE UPDATE OF K2 ON R1
-- FOR EACH ROW
-- WHEN (K2 IS NULL)
-- SIGNAL SQLSTATE '70001' ('VALORE DI CHIAVE NULLO!');

--d) il valore di C non può essere superiore a quello di A
--dell'istanza di E1 cui l'istanza di E2 è eventualmente
--associata;
