DROP TABLE BARCHE;
DROP TABLE SOCI;
DROP TABLE PRENOTAZIONI;

CREATE TABLE BARCHE (
	NOMEBARCA VARCHAR(20) NOT NULL PRIMARY KEY,
	COLORE VARCHAR(15) NOT NULL ,
	LUNGHEZZA DEC(4,2) NOT NULL CHECK (LUNGHEZZA > 0));

CREATE TABLE SOCI (
	CODS CHAR(3) NOT NULL PRIMARY KEY,
	NOME VARCHAR(30) NOT NULL,
	COGNOME VARCHAR(30) NOT NULL,
	DATANASCITA DATE NOT NULL	);

CREATE TABLE PRENOTAZIONI (
	NOMEBARCA VARCHAR(20) NOT NULL REFERENCES BARCHE,
	CODS CHAR(3) NOT NULL REFERENCES SOCI,
	DATA DATE NOT NULL,
	PRIMARY KEY (CODS,DATA)    );

INSERT INTO BARCHE VALUES
('lucedellest','bianco',15),
('mariamaria','giallo',8.75),
('excalibur','bianco',15),
('foxtrot','azzurro',8.75);

INSERT INTO SOCI VALUES
('001','Giorgio','Rossi','20/11/1984'), 
('002','Luca','Verdi','02/08/1980'),
('003','Anna','Neri','16/03/1984');


INSERT INTO PRENOTAZIONI VALUES
('lucedellest','001','12/03/2011'),
('lucedellest','001','12/01/2012'),
('lucedellest','002','11/05/2011'),
('mariamaria','001','22/08/2011'),
('mariamaria','002','25/09/2011'),
('mariamaria','003','24/10/2011'),
('excalibur','002','22/08/2011'),
('excalibur','002','23/08/2011'),
('foxtrot','001','11/01/2012'),
('foxtrot','001','13/01/2012'),
('foxtrot','003','12/12/2011'),

--STESSA LUNGHEZZA, GIORNI CONSECUTIVI
--CONSECUTIVA ALLA PRENOTAZIONE DELLA MARIAMARIA
('foxtrot','001','23/08/2011');


SELECT * FROM BARCHE;
SELECT * FROM SOCI;
SELECT * FROM PRENOTAZIONI;

--BARCHE(NomeBarca,Colore,Lunghezza);
--Lunghezza e' in formato Dec(4,2)

-- SOCI(CodS,Nome,Cognome,DataNascita);

-- PRENOTAZIONI(NomeBarca,CodS,Data),
-- NomeBarca REFERENCES BARCHE, CodS REFERENCES SOCI;
-- Data si riferisce alla data in cui si vuole usare una barca,
-- NON alla data in cui e' stata eseguita la prenotazione

--2.1) [2 p.] Per ogni anno, il numero di barche diverse noleggiate dai soci

SELECT YEAR(DATA) AS ANNO, COUNT(DISTINCT NOMEBARCA) AS NUMBARCHE_DIVERSE
FROM PRENOTAZIONI
GROUP BY YEAR(DATA);

--OPPURE INTESA COSI PER OGNI ANNO, IL NUMERO DI BARCHE NOLEGGIATE DAI DIVERSI SOCI
SELECT YEAR(DATA) AS ANNO, CODS, COUNT(DISTINCT NOMEBARCA) AS NUMBARCHE_DIVERSE_PRENOTATE
FROM PRENOTAZIONI
GROUP BY YEAR(DATA), CODS;

--PROF

SELECT YEAR(P.Data) AS Anno, P.CodS, COUNT(DISTINCT NomeBarca) AS NumBarche
FROM PRENOTAZIONI P
GROUP BY YEAR(P.Data), P.CodS;

--2.2) [3 p.] I soci che non hanno prenotato in giorni consecutivi due barche diverse della stessa
--lunghezza

--TUTTI I SOCI - QUELLI CHE HANNO PRENOTATO IN GIORNI CONSECUTIVI 2 BARCHE DIVERSE DELLA STESSA LUNGHEZZA

--SOTTRAENDO:
--SELFJOIN

WITH PRENOTAZIONI_BARCHE(NOMEBARCA, CODS, DATA, COLORE, LUNGHEZZA) AS(

	SELECT P.NOMEBARCA, P.CODS, P.DATA, B.COLORE, B.LUNGHEZZA
	FROM PRENOTAZIONI P, BARCHE B
	WHERE P.NOMEBARCA = B.NOMEBARCA

)

SELECT CODS
FROM SOCI

EXCEPT

SELECT P1.CODS
FROM PRENOTAZIONI_BARCHE P1, PRENOTAZIONI_BARCHE P2
WHERE P1.CODS = P2.CODS	--RIFERITO A STESSO SOCIO!
AND P1.NOMEBARCA <> P2.NOMEBARCA --DIVERSA BARCA
AND DAYS(P1.DATA) - DAYS(P2.DATA) = 1 --GIORNI CONSECUTIVI!
AND P1.LUNGHEZZA = P2.LUNGHEZZA;

--PROF

SELECT S.CodS
FROM SOCI S
EXCEPT
SELECT P1.CodS
FROM PRENOTAZIONI P1, PRENOTAZIONI P2, BARCHE B1, BARCHE B2
WHERE P1.CodS = P2.CodS
AND P1.NomeBarca = B1.NomeBarca
AND P2.NomeBarca = B2.NomeBarca
AND DAYS(P2.Data) - DAYS(P1.Data) = 1
AND B1.Lunghezza = B2.Lunghezza
AND B1.NomeBarca <> B2.NomeBarca;

























