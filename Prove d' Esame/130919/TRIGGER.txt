
--TRIGGER PER FARGLI REFERENZIARE E2!
CREATE TRIGGER E3_REF_E2
NO CASCADE BEFORE INSERT ON E3
REFERENCING NEW AS N
FOR EACH ROW
WHEN (EXISTS(SELECT *
			 FROM E1
			 WHERE N.K1R2 = E1.K1
			 AND E1.TIPO12 <> 2))
SIGNAL SQLSTATE '70001' ('La tupla inserita in E3 può referenziare solo un istanza di E2!');

--TRIGGER PER FARGLI RIFERENZIARE INVECE E4!

CREATE TRIGGER E1_REF_E4
NO CASCADE BEFORE INSERT ON E1
REFERENCING NEW AS N
FOR EACH ROW
WHEN (EXISTS(SELECT *
			 FROM E3
			 WHERE N.K3R1 = E3.K3
			 AND E3.TIPO34 <> 4))
SIGNAL SQLSTATE '70002' ('La tupla inserita in E1 può referenziare solo un istanza di E4!');

--vers. not exists! IN QUESTO CASO VA BENE XK PARTECIPAZIONE E' OBBLIGATORIA!
CREATE TRIGGER E1_REF_E4
NO CASCADE BEFORE INSERT ON E1
REFERENCING NEW AS N
FOR EACH ROW
WHEN (NOT EXISTS(SELECT *
				 FROM E3
				 WHERE N.K3R1 = E3.K3
				 AND E3.TIPO34 = 4))
SIGNAL SQLSTATE '70001' ('La tupla inserita in E1 può referenziare solo un istanza di E4!');

--vers. not exists! IN QUESTO CASO NON VA BENE PERCHE' LA QUERY POTREBBE ANCHE NON ESISTERE
--SE K1R2 = NULL O MEGLIO SE E3 NON PARTECIPA!
CREATE TRIGGER E3_REF_E2
NO CASCADE BEFORE INSERT ON E3
REFERENCING NEW AS N
FOR EACH ROW
WHEN (NOT EXISTS(SELECT *
				 FROM E1
				 WHERE N.K1R2 = E1.K1
				 AND E1.TIPO12 = 2))
SIGNAL SQLSTATE '70001' ('La tupla inserita in E3 può referenziare solo un istanza di E2!');

--ALTERNATIVA FUNZIONANTE
CREATE TRIGGER E3_REF_E2
NO CASCADE BEFORE INSERT ON E3
REFERENCING NEW AS N
FOR EACH ROW /*SOLO SE E3 PARTECIPA!*/
WHEN (K1R2 IS NOT NULL AND NOT EXISTS(SELECT *
									  FROM E1
									  WHERE N.K1R2 = E1.K1
								      AND E1.TIPO12 = 2))
SIGNAL SQLSTATE '70001' ('La tupla inserita in E3 può referenziare solo un istanza di E2!');

CREATE TRIGGER K1R2_UNIQUE
NO CASCADE BEFORE INSERT ON E3
REFERENCING NEW AS N
FOR EACH ROW
WEHEN (EXISTS(SELECT *
		      FROM E3
			  WHERE N.K1R2 = E3.K1R2)
SIGNAL SQLSTATE '70003' ('Valore di K1R2 deve essere unico!')


